{"version":3,"sources":["webpack:///src/app/authentification/authentification.page.html","webpack:///src/app/authentification/authentification-routing.module.ts","webpack:///src/app/authentification/authentification.module.ts","webpack:///src/app/authentification/authentification.page.scss","webpack:///src/app/authentification/authentification.page.ts"],"names":["routes","path","component","AuthentificationPageRoutingModule","imports","forChild","exports","AuthentificationPageModule","declarations","AuthentificationPage","api","fb","alertCtrl","toastCtrl","router","userForm","group","username","required","email","password","login","value","subscribe","res","console","log","ActivateUserIsAuthenticated","userIsAuthenticated","navigateByUrl","err","create","header","error","code","subHeader","data","status","message","buttons","alert","present","signUp","duration","toast","showError","inputs","type","name","role","text","handler","resetPw","usernameOrEmail","resetPassword","selector","template"],"mappings":"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","file":"authentification-authentification-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>authentification</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onLogin()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Username</ion-label>\\n      <ion-input formControlName=\\\"username\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n\\n\\n\\n    <ion-button expand=\\\"full\\\" [disabled]=\\\"!userForm.valid\\\" type=\\\"submit\\\">Sign in</ion-button>\\n    <ion-button expand=\\\"full\\\" [disabled]=\\\"!userForm.valid\\\" type=\\\"button\\\" color=\\\"secondary\\\" (click)=\\\"signUp()\\\">Register\\n    </ion-button>\\n    <ion-button expand=\\\"full\\\" type=\\\"button\\\" color=\\\"tertiary\\\" (click)=\\\"openPwReset()\\\">Forgot password?</ion-button>\\n\\n\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthentificationPage } from './authentification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthentificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthentificationPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { AuthentificationPageRoutingModule } from \"./authentification-routing.module\";\n\nimport { AuthentificationPage } from \"./authentification.page\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule,\n\t\tAuthentificationPageRoutingModule,\n\t\tReactiveFormsModule,\n\t],\n\tdeclarations: [AuthentificationPage],\n})\nexport class AuthentificationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpZmljYXRpb24vYXV0aGVudGlmaWNhdGlvbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"../services/api.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AlertController, ToastController } from \"@ionic/angular\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n\tselector: \"app-authentification\",\n\ttemplateUrl: \"./authentification.page.html\",\n\tstyleUrls: [\"./authentification.page.scss\"],\n})\nexport class AuthentificationPage implements OnInit {\n\tuserForm: FormGroup;\n\n\tconstructor(\n\t\tprivate api: ApiService,\n\t\tprivate fb: FormBuilder,\n\t\tprivate alertCtrl: AlertController,\n\t\tprivate toastCtrl: ToastController,\n\t\tprivate router: Router\n\t) {}\n\n\tngOnInit() {\n\t\tthis.userForm = this.fb.group({\n\t\t\tusername: [\"\", Validators.required],\n\t\t\temail: \"\",\n\t\t\tpassword: [\"\", Validators.required],\n\t\t});\n\t}\n\n\tonLogin() {\n\t\tthis.api\n\t\t\t.login(this.userForm.value.username, this.userForm.value.password)\n\t\t\t.subscribe(\n\t\t\t\t(res) => {\n\t\t\t\t\tconsole.log(\"login finished\");\n\t\t\t\t\tthis.api.ActivateUserIsAuthenticated();\n\t\t\t\t\tconsole.log(this.api.userIsAuthenticated);\n\t\t\t\t\tthis.router.navigateByUrl(\"/tabs/stone\");\n\t\t\t\t},\n\t\t\t\tasync (err) => {\n\t\t\t\t\tconst alert = await this.alertCtrl.create({\n\t\t\t\t\t\theader: err.error.code,\n\t\t\t\t\t\tsubHeader: err.error.data.status,\n\t\t\t\t\t\tmessage: err.error.message,\n\t\t\t\t\t\tbuttons: [\"OK\"],\n\t\t\t\t\t});\n\t\t\t\t\tawait alert.present();\n\t\t\t\t\tconsole.log(this.api.userIsAuthenticated);\n\t\t\t\t}\n\t\t\t);\n\n\t\t//console.log(this.api.userIsAuthenticated);\n\t}\n\n\tsignUp() {\n\t\tthis.api\n\t\t\t.signUp(\n\t\t\t\tthis.userForm.value.username,\n\t\t\t\tthis.userForm.value.email,\n\t\t\t\tthis.userForm.value.password\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\tasync (res) => {\n\t\t\t\t\tconst toast = await this.toastCtrl.create({\n\t\t\t\t\t\tmessage: res[\"message\"],\n\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t});\n\t\t\t\t\ttoast.present();\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tthis.showError(err);\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\tasync openPwReset() {\n\t\tconst alert = await this.alertCtrl.create({\n\t\t\theader: \"Forgot password?\",\n\t\t\tmessage: \"Enter your email or username to retrieve a new password\",\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tname: \"usernameOrEmail\",\n\t\t\t\t},\n\t\t\t],\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\trole: \"cancel\",\n\t\t\t\t\ttext: \"Back\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: \"Reset Password\",\n\t\t\t\t\thandler: (data) => {\n\t\t\t\t\t\tthis.resetPw(data[\"usernameOrEmail\"]);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tawait alert.present();\n\t}\n\n\tresetPw(usernameOrEmail) {\n\t\tthis.api.resetPassword(usernameOrEmail).subscribe(\n\t\t\tasync (res) => {\n\t\t\t\tconst toast = await this.toastCtrl.create({\n\t\t\t\t\tmessage: res[\"message\"],\n\t\t\t\t\tduration: 2000,\n\t\t\t\t});\n\t\t\t\ttoast.present();\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tthis.showError(err);\n\t\t\t}\n\t\t);\n\t}\n\n\tasync showError(err) {\n\t\tconst alert = await this.alertCtrl.create({\n\t\t\theader: err.error.code,\n\t\t\tsubHeader: err.error.data.status,\n\t\t\tmessage: err.error.message,\n\t\t\tbuttons: [\"OK\"],\n\t\t});\n\t\tawait alert.present();\n\t}\n}\n"]}