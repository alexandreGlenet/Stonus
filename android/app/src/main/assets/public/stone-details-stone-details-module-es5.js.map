{"version":3,"sources":["webpack:///src/app/tabs/stone/stone-details/stone-details.page.html","webpack:///src/app/tabs/stone/stone-details/stone-details-routing.module.ts","webpack:///src/app/tabs/stone/stone-details/stone-details.module.ts","webpack:///src/app/tabs/stone/stone-details/stone-details.page.scss","webpack:///src/app/tabs/stone/stone-details/stone-details.page.ts"],"names":["routes","path","component","StoneDetailsPageRoutingModule","imports","forChild","exports","StoneDetailsPageModule","declarations","Share","StoneDetailsPage","route","api","alertCtrl","stone","comments","newComment","segmentModel","id","snapshot","paramMap","get","getStoneContent","subscribe","res","console","log","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,6BAA6B;AAAA;AAAA,KAA1C;;AAAaA,iCAA6B,6DAJzC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,sBAAsB;AAAA;AAAA,KAAnC;;AAAaA,0BAAsB,6DATlC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,2FAJO,CADD;AAORI,kBAAY,EAAE,CAAC,oEAAD;AAPN,KAAT,CASkC,GAAtBD,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6ECKf;;;QAMQE,K,GAAU,uD,CAAVA,K;;AAOR,QAAaC,gBAAgB;AAa5B,gCACSC,KADT,EAESC,GAFT,EAGSC,SAHT,EAGmC;AAAA;;AAF1B,aAAAF,KAAA,GAAAA,KAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AAfT,aAAAC,KAAA,GAAQ,IAAR;AAMA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,UAAA,GAAa,EAAb,CAQmC,CANnC;;AACA,aAAAC,YAAA,GAAe,KAAf;AAMI;;AAjBwB;AAAA;AAAA,mCAmBjB;AAAA;;AACV,cAAIC,EAAE,GAAG,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAT;AACA,eAAKT,GAAL,CAASU,eAAT,CAAyBJ,EAAzB,EAA6BK,SAA7B,CAAuC,UAACC,GAAD,EAAS;AAC/CC,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACA,iBAAI,CAACV,KAAL,GAAaU,GAAb;AACA,WAHD,EAFU,CAOV;AACA;AACA;AACA;AACA;AA9B2B;AAAA;AAAA,0CAgCV;AACjBC,iBAAO,CAACC,GAAR,CAAY,4BAAZ,EADiB,CAEjB;AACA;AACA,SApC2B,CAsC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7C4B;AAAA;AAAA,2CA+CT;AAClBD,iBAAO,CAACC,GAAR,CAAY,6BAAZ;AACA;AAjD2B;;AAAA;AAAA,OAA7B;;;;cAciB;;cACF;;cACM;;;;AAhBRhB,oBAAgB,6DAL5B,gEAAU;AACViB,cAAQ,EAAE,mBADA;AAEVC,cAAQ,EAAR;AAAA;AAAA,qHAFU;;;;AAAA,KAAV,CAK4B,GAAhBlB,gBAAgB,CAAhB","file":"stone-details-stone-details-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/stone/stone-lists\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ stone?.title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <div *ngIf=\\\"stone\\\">\\n    <img [src]=\\\"stone.photo\\\" [style.width]=\\\"'100%'\\\" *ngIf=\\\"stone.photo\\\">\\n    <div [innerHTML]=\\\"stone.nom\\\"></div>\\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label>\\n          Donn√©es de la pierre {{ stone.title }}\\n        </ion-label>\\n      </ion-list-header>\\n      <ion-label>\\n        <p>latitude : {{ stone.latitude }}</p>\\n      </ion-label>\\n      <ion-label>\\n        <p>latitude : {{ stone.latitude }}</p>\\n      </ion-label>\\n    </ion-list>\\n\\n  </div>\\n\\n  <!-- <ion-item>\\n    <ion-label position=\\\"floating\\\">My comment</ion-label>\\n    <ion-textarea rows=\\\"5\\\" [(ngModel)]=\\\"newComment\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"addComment()\\\" [disabled]=\\\"newComment == ''\\\">Add comment</ion-button> -->\\n\\n  <!-- <ion-list>\\n    <ion-list-header>\\n      <ion-label>Comments</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngFor=\\\"let com of comments\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"com.author_avatar_urls['96']\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <h2>{{ com.author_name }}</h2>\\n        <p [innerHTML]=\\\"com.content.rendered\\\"></p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list> -->\\n</ion-content>\\n\\n<ion-footer>\\n  <!-- <ion-toolbar color=\\\"primary\\\"> -->\\n  <!-- <ion-button color=\\\"light\\\" expand=\\\"full\\\" fill=\\\"clear\\\" (click)=\\\"sharePost()\\\">\\n      <ion-icon name=\\\"share\\\" slot=\\\"start\\\"></ion-icon> Share\\n    </ion-button> -->\\n  <!-- </ion-toolbar> -->\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StoneDetailsPage } from './stone-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StoneDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StoneDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StoneDetailsPageRoutingModule } from './stone-details-routing.module';\n\nimport { StoneDetailsPage } from './stone-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StoneDetailsPageRoutingModule\n  ],\n  declarations: [StoneDetailsPage]\n})\nexport class StoneDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvc3RvbmUvc3RvbmUtZGV0YWlscy9zdG9uZS1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApiService } from \"../../../services/api.service\";\n\nimport * as L from \"leaflet\";\n//import { antPath } from \"leaflet-ant-path\";\nimport \"leaflet/dist/images/marker-shadow.png\";\nimport \"leaflet/dist/images/marker-icon-2x.png\";\n\nimport { Plugins } from \"@capacitor/core\";\nimport { AlertController } from \"@ionic/angular\";\nconst { Share } = Plugins;\n\n@Component({\n\tselector: \"app-stone-details\",\n\ttemplateUrl: \"./stone-details.page.html\",\n\tstyleUrls: [\"./stone-details.page.scss\"],\n})\nexport class StoneDetailsPage implements OnInit {\n\tstone = null;\n\t//Map\n\tmap: L.Map;\n\tnewMarker: any;\n\taddress: string[];\n\n\tcomments = [];\n\tnewComment = \"\";\n\n\t//Segment\n\tsegmentModel = \"map\";\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate api: ApiService,\n\t\tprivate alertCtrl: AlertController\n\t) {}\n\n\tngOnInit() {\n\t\tlet id = this.route.snapshot.paramMap.get(\"id\");\n\t\tthis.api.getStoneContent(id).subscribe((res) => {\n\t\t\tconsole.log(\"stone: \", res);\n\t\t\tthis.stone = res;\n\t\t});\n\n\t\t// this.api.getComments(id).subscribe(res => {\n\t\t//   console.log('comments: ', res);\n\t\t//   this.comments = res;\n\t\t// });\n\t}\n\n\tionViewDidEnter() {\n\t\tconsole.log(\"didEnter-stone-detail.page\");\n\t\t//this.map.remove();\n\t\t//console.log(this.map);\n\t}\n\n\t// async sharePost() {\n\t//   await Share.share({\n\t//     title: this.post.title.rendered,\n\t//     text: 'Check out this post!',\n\t//     url: this.post.link,\n\t//     dialogTitle: 'Share now'\n\t//   });\n\t// }\n\n\tionViewWillLeave() {\n\t\tconsole.log(\"willleave-stone-detail.page\");\n\t}\n\n\t// addComment() {\n\t//   this.api.addComment(this.post.id, this.newComment).subscribe(res => {\n\t//     this.newComment = '';\n\t//   }, async err => {\n\t//     const alert = await this.alertCtrl.create({\n\t//       header: err.error.code,\n\t//       subHeader: err.error.data.status,\n\t//       message: err.error.message,\n\t//       buttons: ['OK']\n\t//     });\n\t//     await alert.present();\n\t//   })\n\t// }\n}\n"]}